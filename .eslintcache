[{"/Users/mattromano/Desktop/todo/src/index.js":"1","/Users/mattromano/Desktop/todo/src/App.js":"2","/Users/mattromano/Desktop/todo/src/reportWebVitals.js":"3","/Users/mattromano/Desktop/todo/src/components/Form.js":"4","/Users/mattromano/Desktop/todo/src/components/TodoList.js":"5","/Users/mattromano/Desktop/todo/src/components/Todo.js":"6"},{"size":500,"mtime":1611341542194,"results":"7","hashOfConfig":"8"},{"size":1009,"mtime":1611425642675,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611341542195,"results":"10","hashOfConfig":"8"},{"size":1220,"mtime":1611425142704,"results":"11","hashOfConfig":"8"},{"size":422,"mtime":1611412616942,"results":"12","hashOfConfig":"8"},{"size":895,"mtime":1611414361369,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2i6ajs",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"/Users/mattromano/Desktop/todo/src/index.js",[],["28","29"],"/Users/mattromano/Desktop/todo/src/App.js",["30","31"],"/Users/mattromano/Desktop/todo/src/reportWebVitals.js",[],"/Users/mattromano/Desktop/todo/src/components/Form.js",[],"/Users/mattromano/Desktop/todo/src/components/TodoList.js",[],"/Users/mattromano/Desktop/todo/src/components/Todo.js",["32"],"import React from 'react';\n\nconst Todo = ({text, todo, todos, setTodos}) => {\n    const deleteHandler = () => {\n        setTodos(todos.filter((el) => el.id !== todo.id));\n    };\n\n    const completeHandler = () => {\n        setTodos(todos.map(item => {\n            if(item.id === todo.id) {\n                return {\n                    ...item, completed: !item.completed,\n            };\n        }\n        return item;\n    })\n    );\n}; \n    return (\n        <div className=\"todo\">\n            <li className={'todo-item ${todo.completed ? \"completed\" : \"\"}'}>{text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\">\n                <i className=\"fas fa-check\"></i>\n            </button>\n            <button onClick={deleteHandler} className=\"trash-btn\">\n                <i className=\"fas fa-trash\"></i>\n            </button>\n        </div>\n    );\n}\n\nexport default Todo;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":10,"column":10,"nodeType":"39","messageId":"40","endLine":10,"endColumn":23},{"ruleId":"37","severity":1,"message":"41","line":12,"column":9,"nodeType":"39","messageId":"40","endLine":12,"endColumn":22},{"ruleId":"42","severity":1,"message":"43","line":21,"column":28,"nodeType":"44","messageId":"45","endLine":21,"endColumn":76},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'filteredTodos' is assigned a value but never used.","Identifier","unusedVar","'filterHandler' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation"]