[{"/Users/mattromano/Desktop/todo/src/index.js":"1","/Users/mattromano/Desktop/todo/src/App.js":"2","/Users/mattromano/Desktop/todo/src/reportWebVitals.js":"3","/Users/mattromano/Desktop/todo/src/components/Form.js":"4","/Users/mattromano/Desktop/todo/src/components/TodoList.js":"5","/Users/mattromano/Desktop/todo/src/components/Todo.js":"6"},{"size":500,"mtime":1611341542194,"results":"7","hashOfConfig":"8"},{"size":1544,"mtime":1611442875867,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611341542195,"results":"10","hashOfConfig":"8"},{"size":1220,"mtime":1611425142704,"results":"11","hashOfConfig":"8"},{"size":445,"mtime":1611443164727,"results":"12","hashOfConfig":"8"},{"size":895,"mtime":1611426745269,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2i6ajs",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"/Users/mattromano/Desktop/todo/src/index.js",[],["28","29"],"/Users/mattromano/Desktop/todo/src/App.js",["30"],"/Users/mattromano/Desktop/todo/src/reportWebVitals.js",[],"/Users/mattromano/Desktop/todo/src/components/Form.js",[],"/Users/mattromano/Desktop/todo/src/components/TodoList.js",[],"/Users/mattromano/Desktop/todo/src/components/Todo.js",["31"],"import React from 'react';\n\nconst Todo = ({text, todo, todos, setTodos}) => {\n    const deleteHandler = () => {\n        setTodos(todos.filter((el) => el.id !== todo.id));\n    };\n\n    const completeHandler = () => {\n        setTodos(todos.map(item => {\n            if(item.id === todo.id) {\n                return {\n                    ...item, completed: !item.completed,\n            };\n        }\n        return item;\n    })\n    );\n}; \n    return (\n        <div className=\"todo\">\n            <li className={'todo-item ${todo.completed ? \"completed\" : \"\"}'}>{text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\">\n                <i className=\"fas fa-check\"></i>\n            </button>\n            <button onClick={deleteHandler} className=\"trash-btn\">\n                <i className=\"fas fa-trash\"></i>\n            </button>\n        </div>\n    );\n}\n\nexport default Todo;",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":19,"column":6,"nodeType":"38","endLine":19,"endColumn":21,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":21,"column":28,"nodeType":"42","messageId":"43","endLine":21,"endColumn":76},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["46"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"49","text":"50"},[493,508],"[todos, status, filterHandler, saveLocalTodos]"]